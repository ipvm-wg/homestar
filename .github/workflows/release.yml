name: 𝌚 Release

on:
  workflow_dispatch:
    inputs:
      force-publish:
        required: true
        type: boolean
        description: Publish Releases at Anytime

  workflow_run:
    workflows: [ 🧪 Tests and Checks ]
    branches: [main]
    types: [ completed ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  release-please:
    runs-on: ubuntu-latest
    if: >
      github.ref == 'refs/heads/main' &&
      github.repository_owner == 'ipvm-wg' &&
      github.event.workflow_run.conclusion == 'success'

    outputs:
      release_created: ${{ steps.release.outputs.release_created }}

    steps:
      - name: Run release-please
        id: release
        uses: google-github-actions/release-please-action@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          default-branch: main
          command: manifest
          extra-files: |
            README.md

  publish-release:
    runs-on: ubuntu-latest
    needs: [ release-please ]

    permissions:
      contents: write
      pull-requests: write

    if: ${{ needs.release-please.outputs.release_created || github.event.inputs.force-publish }}

    steps:
      - name: Install Protoc
        uses: arduino/setup-protoc@v1
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Cache Project
        uses: Swatinem/rust-cache@v2

      - name: Install Rust Toolchain
        uses: actions-rs/toolchain@v1
        with:
          override: true
          profile: minimal
          toolchain: stable

      - name: Verify Publishing of crate
        uses: katyo/publish-crates@v1
        with:
          dry-run: true

      - name: Cargo Publish to crates.io
        uses: katyo/publish-crates@v1
        with:
          registry-token: ${{ secrets.CARGO_REGISTRY_TOKEN }}
